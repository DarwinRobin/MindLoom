generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt      // ✅ optional to avoid breaking migration

  accounts      Account[]
  sessions      Session[]
  enrollments   CourseEnrollment[]
  progresses    Progress[]
}

model Course {
  id          String             @id @default(cuid())
  title       String
  description String
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  lessons     Lesson[]
  enrollments CourseEnrollment[]
}

model Lesson {
  id        String   @id @default(cuid())
  title     String
  content   String
  videoUrl  String            // ✅ This is the field that was failing earlier
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  progress  Progress[]
}

model CourseEnrollment {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  enrolledAt DateTime @default(now())
}

model Progress {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  lessonId  String
  completed Boolean  @default(false)
  updatedAt DateTime @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?    
  token_type         String? 
  scope              String? 
  id_token           String? 
  session_state      String? 

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
